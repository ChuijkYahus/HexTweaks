plugins {
    id "com.github.johnrengelman.shadow" version "7.1.2"
}

architectury {
    platformSetupLoomIde()
    forge()
}

loom {
    accessWidenerPath = project(":common").loom.accessWidenerPath

    forge {
        convertAccessWideners = true
        extraAccessWideners.add loom.accessWidenerPath.get().asFile.name

        mixinConfig "examplemod-common.mixins.json"
        mixinConfig "examplemod.mixins.json"
    }
}

repositories {
    mavenCentral()
    maven {
        name = 'Kotlin for Forge'
        url = 'https://thedarkcolour.github.io/KotlinForForge/'
    }
    maven {
        url = "https://maven.theillusivec4.top"
    }

}

configurations {
    common
    shadowCommon // Don't use shadow from the shadow plugin since it *excludes* files.
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentForge.extendsFrom common
}

dependencies {
    forge "net.minecraftforge:forge:${rootProject.forge_version}"
    // Remove the next line if you don't want to depend on the API
    modApi "dev.architectury:architectury-forge:${rootProject.architectury_version}"

    common(project(path: ":common", configuration: "namedElements")) { transitive false }
    shadowCommon(project(path: ":common", configuration: "transformProductionForge")) { transitive = false }

    modApi("at.petra-k.hexcasting:hexcasting-forge-1.20.1:${rootProject.hexcasting_version}") {transitive false}
    modImplementation "at.petra-k.paucal:paucal-forge-${rootProject.minecraft_version}:${rootProject.paucal_version}"
    modLocalRuntime "top.theillusivec4.caelus:caelus-forge:${rootProject.caelus_version}"
    modApi("me.shedaniel.cloth:cloth-config-forge:${rootProject.clothconfig_version}")

    modCompileOnly("cc.tweaked:cc-tweaked-${rootProject.minecraft_version}-forge-api:${rootProject.cct_version}")
    modRuntimeOnly "cc.tweaked:cc-tweaked-${rootProject.minecraft_version}-forge:${rootProject.cct_version}"

    compileOnly(annotationProcessor("io.github.llamalad7:mixinextras-common:0.3.6"))
    implementation(include("io.github.llamalad7:mixinextras-forge:0.3.6"))

    //hexcasting deps
    modImplementation "vazkii.patchouli:Patchouli:${rootProject.patchouli_version}-FORGE"
    implementation 'thedarkcolour:kotlinforforge:4.3.0'

    modCompileOnly "com.sk89q.worldedit:worldedit-forge-mc1.20:7.3.0-SNAPSHOT"

}

processResources {
    inputs.property "version", project.version

    filesMatching("META-INF/mods.toml") {
        expand "version": project.version
    }
}

shadowJar {
    exclude "fabric.mod.json"
    exclude "architectury.common.json"

    configurations = [project.configurations.shadowCommon]
    archiveClassifier = "dev-shadow"
}

remapJar {
    input.set shadowJar.archiveFile
    dependsOn shadowJar
}

sourcesJar {
    def commonSources = project(":common").sourcesJar
    dependsOn commonSources
    from commonSources.archiveFile.map { zipTree(it) }
}

components.java {
    withVariantsFromConfiguration(project.configurations.shadowRuntimeElements) {
        skip()
    }
}

publishing {
    publications {
        mavenForge(MavenPublication) {
            artifactId = rootProject.archives_base_name + "-" + project.name
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
    }
}
